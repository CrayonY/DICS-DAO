<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ucd.server.mapper.thirdinterfacemapper.CenterStautsRecordsMapper">
    <resultMap id="BaseResultMap" type="com.ucd.server.model.thirdinterfacemodel.CenterStautsRecords">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="key_id" property="keyId" jdbcType="VARCHAR"/>
        <result column="down_time" property="downTime" jdbcType="TIMESTAMP"/>
        <result column="healthy_time" property="healthyTime" jdbcType="TIMESTAMP"/>
        <result column="center" property="center" jdbcType="VARCHAR"/>
        <result column="is_sync_data" property="isSyncData" jdbcType="TINYINT"/>
        <result column="sync_status" property="syncStatus" jdbcType="TINYINT"/>
        <result column="third_back_status" property="thirdBackStatus" jdbcType="TINYINT"/>
        <result column="plat_id" property="platId" jdbcType="TINYINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="push_time" property="pushTime" jdbcType="TIMESTAMP"/>
        <result column="third_back_time" property="thirdBackTime" jdbcType="TIMESTAMP"/>
        <result column="healthy_status" property="healthyStatus" jdbcType="VARCHAR"/>
        <result column="data_type" property="dataType" jdbcType="TINYINT"/>
        <result column="push_times" property="pushTimes" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, key_id, down_time, healthy_time, center, is_sync_data, sync_status, third_back_status,
        plat_id, create_time, push_time, third_back_time, healthy_status, data_type, push_times
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.ucd.server.model.thirdinterfacemodel.CenterStautsRecordsExample">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from center_stauts_records
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from center_stauts_records
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from center_stauts_records
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.ucd.server.model.thirdinterfacemodel.CenterStautsRecordsExample">
        delete from center_stauts_records
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.ucd.server.model.thirdinterfacemodel.CenterStautsRecords">
        insert into center_stauts_records (id, key_id, down_time,
        healthy_time, center, is_sync_data,
        sync_status, third_back_status, plat_id,
        create_time, push_time, third_back_time,
        healthy_status, data_type, push_times
        )
        values (#{id,jdbcType=INTEGER}, #{keyId,jdbcType=VARCHAR}, #{downTime,jdbcType=TIMESTAMP},
        #{healthyTime,jdbcType=TIMESTAMP}, #{center,jdbcType=VARCHAR}, #{isSyncData,jdbcType=TINYINT},
        #{syncStatus,jdbcType=TINYINT}, #{thirdBackStatus,jdbcType=TINYINT}, #{platId,jdbcType=TINYINT},
        #{createTime,jdbcType=TIMESTAMP}, #{pushTime,jdbcType=TIMESTAMP}, #{thirdBackTime,jdbcType=TIMESTAMP},
        #{healthyStatus,jdbcType=VARCHAR}, #{dataType,jdbcType=TINYINT}, #{pushTimes,jdbcType=INTEGER}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.ucd.server.model.thirdinterfacemodel.CenterStautsRecords">
        insert into center_stauts_records
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="keyId != null">
                key_id,
            </if>
            <if test="downTime != null">
                down_time,
            </if>
            <if test="healthyTime != null">
                healthy_time,
            </if>
            <if test="center != null">
                center,
            </if>
            <if test="isSyncData != null">
                is_sync_data,
            </if>
            <if test="syncStatus != null">
                sync_status,
            </if>
            <if test="thirdBackStatus != null">
                third_back_status,
            </if>
            <if test="platId != null">
                plat_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="pushTime != null">
                push_time,
            </if>
            <if test="thirdBackTime != null">
                third_back_time,
            </if>
            <if test="healthyStatus != null">
                healthy_status,
            </if>
            <if test="dataType != null">
                data_type,
            </if>
            <if test="pushTimes != null">
                push_times,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="keyId != null">
                #{keyId,jdbcType=VARCHAR},
            </if>
            <if test="downTime != null">
                #{downTime,jdbcType=TIMESTAMP},
            </if>
            <if test="healthyTime != null">
                #{healthyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="center != null">
                #{center,jdbcType=VARCHAR},
            </if>
            <if test="isSyncData != null">
                #{isSyncData,jdbcType=TINYINT},
            </if>
            <if test="syncStatus != null">
                #{syncStatus,jdbcType=TINYINT},
            </if>
            <if test="thirdBackStatus != null">
                #{thirdBackStatus,jdbcType=TINYINT},
            </if>
            <if test="platId != null">
                #{platId,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="pushTime != null">
                #{pushTime,jdbcType=TIMESTAMP},
            </if>
            <if test="thirdBackTime != null">
                #{thirdBackTime,jdbcType=TIMESTAMP},
            </if>
            <if test="healthyStatus != null">
                #{healthyStatus,jdbcType=VARCHAR},
            </if>
            <if test="dataType != null">
                #{dataType,jdbcType=TINYINT},
            </if>
            <if test="pushTimes != null">
                #{pushTimes,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.ucd.server.model.thirdinterfacemodel.CenterStautsRecordsExample"
            resultType="java.lang.Integer">
        select count(*) from center_stauts_records
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update center_stauts_records
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.keyId != null">
                key_id = #{record.keyId,jdbcType=VARCHAR},
            </if>
            <if test="record.downTime != null">
                down_time = #{record.downTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.healthyTime != null">
                healthy_time = #{record.healthyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.center != null">
                center = #{record.center,jdbcType=VARCHAR},
            </if>
            <if test="record.isSyncData != null">
                is_sync_data = #{record.isSyncData,jdbcType=TINYINT},
            </if>
            <if test="record.syncStatus != null">
                sync_status = #{record.syncStatus,jdbcType=TINYINT},
            </if>
            <if test="record.thirdBackStatus != null">
                third_back_status = #{record.thirdBackStatus,jdbcType=TINYINT},
            </if>
            <if test="record.platId != null">
                plat_id = #{record.platId,jdbcType=TINYINT},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.pushTime != null">
                push_time = #{record.pushTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.thirdBackTime != null">
                third_back_time = #{record.thirdBackTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.healthyStatus != null">
                healthy_status = #{record.healthyStatus,jdbcType=VARCHAR},
            </if>
            <if test="record.dataType != null">
                data_type = #{record.dataType,jdbcType=TINYINT},
            </if>
            <if test="record.pushTimes != null">
                push_times = #{record.pushTimes,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update center_stauts_records
        set id = #{record.id,jdbcType=INTEGER},
        key_id = #{record.keyId,jdbcType=VARCHAR},
        down_time = #{record.downTime,jdbcType=TIMESTAMP},
        healthy_time = #{record.healthyTime,jdbcType=TIMESTAMP},
        center = #{record.center,jdbcType=VARCHAR},
        is_sync_data = #{record.isSyncData,jdbcType=TINYINT},
        sync_status = #{record.syncStatus,jdbcType=TINYINT},
        third_back_status = #{record.thirdBackStatus,jdbcType=TINYINT},
        plat_id = #{record.platId,jdbcType=TINYINT},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        push_time = #{record.pushTime,jdbcType=TIMESTAMP},
        third_back_time = #{record.thirdBackTime,jdbcType=TIMESTAMP},
        healthy_status = #{record.healthyStatus,jdbcType=VARCHAR},
        data_type = #{record.dataType,jdbcType=TINYINT},
        push_times = #{record.pushTimes,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective"
            parameterType="com.ucd.server.model.thirdinterfacemodel.CenterStautsRecords">
        update center_stauts_records
        <set>
            <if test="keyId != null">
                key_id = #{keyId,jdbcType=VARCHAR},
            </if>
            <if test="downTime != null">
                down_time = #{downTime,jdbcType=TIMESTAMP},
            </if>
            <if test="healthyTime != null">
                healthy_time = #{healthyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="center != null">
                center = #{center,jdbcType=VARCHAR},
            </if>
            <if test="isSyncData != null">
                is_sync_data = #{isSyncData,jdbcType=TINYINT},
            </if>
            <if test="syncStatus != null">
                sync_status = #{syncStatus,jdbcType=TINYINT},
            </if>
            <if test="thirdBackStatus != null">
                third_back_status = #{thirdBackStatus,jdbcType=TINYINT},
            </if>
            <if test="platId != null">
                plat_id = #{platId,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="pushTime != null">
                push_time = #{pushTime,jdbcType=TIMESTAMP},
            </if>
            <if test="thirdBackTime != null">
                third_back_time = #{thirdBackTime,jdbcType=TIMESTAMP},
            </if>
            <if test="healthyStatus != null">
                healthy_status = #{healthyStatus,jdbcType=VARCHAR},
            </if>
            <if test="dataType != null">
                data_type = #{dataType,jdbcType=TINYINT},
            </if>
            <if test="pushTimes != null">
                push_times = #{pushTimes,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ucd.server.model.thirdinterfacemodel.CenterStautsRecords">
        update center_stauts_records
        set key_id = #{keyId,jdbcType=VARCHAR},
        down_time = #{downTime,jdbcType=TIMESTAMP},
        healthy_time = #{healthyTime,jdbcType=TIMESTAMP},
        center = #{center,jdbcType=VARCHAR},
        is_sync_data = #{isSyncData,jdbcType=TINYINT},
        sync_status = #{syncStatus,jdbcType=TINYINT},
        third_back_status = #{thirdBackStatus,jdbcType=TINYINT},
        plat_id = #{platId,jdbcType=TINYINT},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        push_time = #{pushTime,jdbcType=TIMESTAMP},
        third_back_time = #{thirdBackTime,jdbcType=TIMESTAMP},
        healthy_status = #{healthyStatus,jdbcType=VARCHAR},
        data_type = #{dataType,jdbcType=TINYINT},
        push_times = #{pushTimes,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>