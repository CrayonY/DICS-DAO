server:
  port: 28060
spring:
  application:
    name: dao
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    username: root
    password: rootroot
#    url: jdbc:mysql://10.66.1.192:3306/clouddemo?characterEncoding=utf-8&useSSL=false
    #url: jdbc:mysql://10.66.1.204:3306/monitordb?characterEncoding=utf-8&useSSL=false
     url: jdbc:mysql://10.66.1.160:3306/monitordb?characterEncoding=utf-8&useSSL=false&useAffectedRows=true

     #url: jdbc:mysql://10.66.1.164:3306/monitordb?characterEncoding=utf-8&useSSL=false&useAffectedRows=true


    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      initial-size: 5
      min-idle: 5
      max-active: 20
      max-wait: 60000
      test-while-idle: true
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 30000
      validation-query: select 'x'
      test-on-borrow: false
      test-on-return: false
      max-pool-prepared-statement-per-connection-size: 20
      filters: stat,wall
      connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
      use-global-data-source-stat: true
      stat-view-servlet:
        login-password: admin
        login-username: admin
  jpa:
    show-sql: true
#  cloud:
#    config:
#      discovery:
#        enabled: true
#        service-id: CONFIG
#      profile: dev
eureka:
  client:
    service-url:
#      defaultZone: http://localhost:8761/eureka/
#      defaultZone: http://10.66.1.202:8761/eureka-0.0.1-SNAPSHOT/eureka/,http://10.66.1.203:8761/eureka-0.0.1-SNAPSHOT/eureka/
#     defaultZone: http://10.66.1.192:8761/eureka-0.0.1-SNAPSHOT/eureka/

       defaultZone: http://localhost:8761/eureka-0.0.1-SNAPSHOT/eureka/

  instance:
    prefer-ip-address: true
    instance-id: ${spring.cloud.client.ip-address}:${server.port}
#DAO:
ribbon:
#  NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule
  NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule
  ReadTimeout: 120000
  ConnectTimeout: 30000

mybatis:
  mapper-locations: classpath:mapping/*.xml  #注意：一定要对应mapper映射xml文件的所在路径
  type-aliases-package: com.ucd.server.model.*  # 注意：对应实体类的路径
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl #打印SQL

#pagehelper分页插件
pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql


##连接池的设置
##初始化时建立物理连接的个数
#  #最小连接池数量
#  spring.datasource.druid.min-idle=5
#  #最大连接池数量 maxIdle已经不再使用
#  spring.datasource.druid.max-active=20
#  #获取连接时最大等待时间，单位毫秒
#  spring.datasource.druid.max-wait=60000
#  #申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
#  spring.datasource.druid.test-while-idle=true
#  #既作为检测的间隔时间又作为testWhileIdel执行的依据
#  spring.datasource.druid.time-between-eviction-runs-millis=60000
#  #销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接
#  spring.datasource.druid.min-evictable-idle-time-millis=30000
#  #用来检测连接是否有效的sql 必须是一个查询语句
#  #mysql中为 select 'x'
#  #oracle中为 select 1 from dual
#  spring.datasource.druid.validation-query=select 'x'
#  #申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
#  spring.datasource.druid.test-on-borrow=false
#  #归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
#  spring.datasource.druid.test-on-return=false
#  #当数据库抛出不可恢复的异常时,抛弃该连接
#  spring.datasource.druid.exception-sorter=true
#  #是否缓存preparedStatement,mysql5.5+建议开启
#  #spring.datasource.druid.pool-prepared-statements=true
#  #当值大于0时poolPreparedStatements会自动修改为true
#  spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
#  #配置扩展插件
#  spring.datasource.druid.filters=stat,wall
#  #通过connectProperties属性来打开mergeSql功能；慢SQL记录
#  spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
#  #合并多个DruidDataSource的监控数据
#  spring.datasource.druid.use-global-data-source-stat=true
##设置访问druid监控页的账号和密码,默认没有
#spring.datasource.druid.stat-view-servlet.login-username=admin
#spring.datasource.druid.stat-view-servlet.login-password=admin